var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx } from "@emotion/core";
import { getFlexAxisStyles } from "./getFlexAxisStyles";
export function Row(props) {
    const { wrap, justify, align } = props, attributes = __rest(props, ["wrap", "justify", "align"]);
    const styles = {
        display: "flex",
        flexDirection: "row",
        flexWrap: wrap,
        justifyContent: justify,
        alignItems: align
    };
    return (jsx("div", Object.assign({ css: styles }, attributes), props.children));
}
export function RowAround(props) {
    const { styles, attributes } = getFlexAxisStyles(props, "row", "space-around");
    return (jsx("div", Object.assign({ css: styles }, attributes), props.children));
}
export function RowCenter(props) {
    const { styles, attributes } = getFlexAxisStyles(props, "row", "center");
    return (jsx("div", Object.assign({ css: styles }, attributes), props.children));
}
export function RowBetween(props) {
    const { styles, attributes } = getFlexAxisStyles(props, "row", "space-between");
    return (jsx("div", Object.assign({ css: styles }, attributes), props.children));
}
export function RowStart(props) {
    const { styles, attributes } = getFlexAxisStyles(props, "row", "flex-start");
    return (jsx("div", Object.assign({ css: styles }, attributes), props.children));
}
export function RowEnd(props) {
    const { styles, attributes } = getFlexAxisStyles(props, "row", "flex-end");
    return (jsx("div", Object.assign({ css: styles }, attributes), props.children));
}
