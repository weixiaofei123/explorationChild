export declare type SetStateAction<V> = (state?: V) => void;
export declare type updateFunction = () => void;
export declare type GlobalStateItem<V> = {
    state: V;
    update: Map<number, updateFunction>;
};
export declare type GlobalStateStore<K, V> = Map<K, GlobalStateItem<V>>;
export declare type GlobalStateResult<V> = [V, SetStateAction<V>];
export declare function setGlobalState<K = any, V = any>(key: K, value: V): void;
export declare function getGlobalState<K = any, V = any>(key: K): V | undefined;
export declare function useGlobalState<K = any, V = any>(key: K): GlobalStateResult<V | undefined>;
